-- View: ml.vw_player_training

DROP materialized  VIEW ml.mvw_player_predict;

CREATE materialized VIEW ml.mvw_player_predict AS 
 SELECT 
    'T'::text training_type, 
    ps.player,
    ps.loc,
    ps.team,
    ps.opponent,
    ps.game_date,
    ps.season,
    case when gp.seconds = 0 then null else gp.seconds end seconds,
    gp.ast * 1.5::double precision + gp.reb * 1.2::double precision + gp.pts + gp.stl * 2::double precision + gp.blk * 2::double precision - gp.tov AS fdpts,
    t_opp.fga,
    t_opp.fg_pct,
    t_opp.fg3a,
    t_opp.fg3_pct,
    t_opp.fta,
    t_opp.ft_pct,
    t_opp.oreb,
    t_opp.dreb,
    t_opp.ast,
    t_opp.stl,
    t_opp.blk,
    t_opp.tov,
    t_opp.pf,
    t_opp.pts,
    t_opp.plus_minus,
    t_opp.off_rating,
    t_opp.def_rating,
    t_opp.ast_pct,
    t_opp.ast_tov,
    t_opp.ast_ratio,
    t_opp.oreb_pct,
    t_opp.dreb_pct,
    t_opp.reb_pct,
    t_opp.efg_pct,
    t_opp.ts_pct,
    t_opp.usg_pct,
    t_opp.pace,
    t_opp.pie,
    t_opp.pts_off_tov,
    t_opp.pts_2nd_chance,
    t_opp.pts_fb,
    t_opp.pts_paint,
    t_opp.opp_pts_off_tov,
    t_opp.opp_pts_2nd_chance,
    t_opp.opp_pts_fb,
    t_opp.opp_pts_paint,
    t_opp.blka,
    t_opp.pfd,
    t_opp.fta_rate,
    t_opp.tm_tov_pct,
    t_opp.opp_efg_pct,
    t_opp.opp_fta_rate,
    t_opp.opp_tov_pct,
    t_opp.opp_oreb_pct,
    t_opp.pct_fga_2pt,
    t_opp.pct_fga_3pt,
    t_opp.pct_pts_2pt,
    t_opp.pct_pts_2pt_mr,
    t_opp.pct_pts_3pt,
    t_opp.pct_pts_fb,
    t_opp.pct_pts_ft,
    t_opp.pct_pts_off_tov,
    t_opp.pct_pts_paint,
    t_opp.pct_ast_2pm,
    t_opp.pct_uast_2pm,
    t_opp.pct_ast_3pm,
    t_opp.pct_uast_3pm,
    t_opp.pct_ast_fgm,
    t_opp.pct_uast_fgm,
    case when ps.season <= 201314 then NULL::double precision else t_opp.dist end dist,
    case when ps.season <= 201314 then NULL::double precision else t_opp.orbc END orbc,
    case when ps.season <= 201314 then NULL::double precision else t_opp.drbc end drbc,
    case when ps.season <= 201314 then NULL::double precision else t_opp.rbc end rbc,
    case when ps.season <= 201314 then NULL::double precision else t_opp.tchs end tchs,
    case when ps.season <= 201314 then NULL::double precision else t_opp.sast end sast,
    case when ps.season <= 201314 then NULL::double precision else t_opp.ftast end ftast,
    case when ps.season <= 201314 then NULL::double precision else t_opp.pass end pass,
    case when ps.season <= 201314 then NULL::double precision else t_opp.cfgm end cfgm,
    case when ps.season <= 201314 then NULL::double precision else t_opp.cfga end cfga,
    case when ps.season <= 201314 then NULL::double precision else t_opp.cfg_pct end cfg_pct,
    case when ps.season <= 201314 then NULL::double precision else t_opp.ufgm end ufgm,
    case when ps.season <= 201314 then NULL::double precision else t_opp.ufga end ufga,
    case when ps.season <= 201314 then NULL::double precision else t_opp.ufg_pct end ufg_pct,
    case when ps.season <= 201314 then NULL::double precision else t_opp.dfgm end dfgm,
    case when ps.season <= 201314 then NULL::double precision else t_opp.dfga end dfga,
    case when ps.season <= 201314 then NULL::double precision else t_opp.dfg_pct end dfg_pct
   FROM rpt.mvw_player_schedule ps
     LEFT JOIN rpt.fct_game_player gp ON ps.game_id::text = gp.game_id::text AND ps.player_id = gp.player_id
     LEFT JOIN rpt.fct_game_team t_opp ON ps.game_id::text = t_opp.game_id::text AND ps.opponent_team_id = t_opp.team_id
  WHERE ps.game_date < current_date 
  and gp.seconds > 0
union
select *
from (
SELECT 
    'P'::text training_type, 
	ps.player,
	ps.loc,
	ps.team,
	ps.opponent,
	ps.game_date,
	ps.season,
	null::integer seconds,
	null::double precision fdpts,
	avg(t_opp.fga) OVER (PARTITION BY ps.opponent_team_id, ps.season, ps.season) AS fga,
	avg(t_opp.fg_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season, ps.season) AS fg_pct,
	avg(t_opp.fg3a) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS fg3a,
	avg(t_opp.fg3_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS fg3_pct,
	avg(t_opp.fta) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS fta,
	avg(t_opp.ft_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS ft_pct,
	avg(t_opp.oreb) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS oreb,
	avg(t_opp.dreb) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS dreb,
	avg(t_opp.ast) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS ast,
	avg(t_opp.stl) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS stl,
	avg(t_opp.blk) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS blk,
	avg(t_opp.tov) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS tov,
	avg(t_opp.pf) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pf,
	avg(t_opp.pts) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pts,
	avg(t_opp.plus_minus) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS plus_minus,
	avg(t_opp.off_rating) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS off_rating,
	avg(t_opp.def_rating) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS def_rating,
	avg(t_opp.ast_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS ast_pct,
	avg(t_opp.ast_tov) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS ast_tov,
	avg(t_opp.ast_ratio) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS ast_ratio,
	avg(t_opp.oreb_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS oreb_pct,
	avg(t_opp.dreb_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS dreb_pct,
	avg(t_opp.reb_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS reb_pct,
	avg(t_opp.efg_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS efg_pct,
	avg(t_opp.ts_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS ts_pct,
	avg(t_opp.usg_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS usg_pct,
	avg(t_opp.pace) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pace,
	avg(t_opp.pie) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pie,
	avg(t_opp.pts_off_tov) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pts_off_tov,
	avg(t_opp.pts_2nd_chance) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pts_2nd_chance,
	avg(t_opp.pts_fb) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pts_fb,
	avg(t_opp.pts_paint) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pts_paint,
	avg(t_opp.opp_pts_off_tov) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS opp_pts_off_tov,
	avg(t_opp.opp_pts_2nd_chance) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS opp_pts_2nd_chance,
	avg(t_opp.opp_pts_fb) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS opp_pts_fb,
	avg(t_opp.opp_pts_paint) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS opp_pts_paint,
	avg(t_opp.blka) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS blka,
	avg(t_opp.pfd) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pfd,
	avg(t_opp.fta_rate) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS fta_rate,
	avg(t_opp.tm_tov_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS tm_tov_pct,
	avg(t_opp.opp_efg_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS opp_efg_pct,
	avg(t_opp.opp_fta_rate) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS opp_fta_rate,
	avg(t_opp.opp_tov_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS opp_tov_pct,
	avg(t_opp.opp_oreb_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS opp_oreb_pct,
	avg(t_opp.pct_fga_2pt) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_fga_2pt,
	avg(t_opp.pct_fga_3pt) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_fga_3pt,
	avg(t_opp.pct_pts_2pt) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_pts_2pt,
	avg(t_opp.pct_pts_2pt_mr) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_pts_2pt_mr,
	avg(t_opp.pct_pts_3pt) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_pts_3pt,
	avg(t_opp.pct_pts_fb) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_pts_fb,
	avg(t_opp.pct_pts_ft) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_pts_ft,
	avg(t_opp.pct_pts_off_tov) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_pts_off_tov,
	avg(t_opp.pct_pts_paint) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_pts_paint,
	avg(t_opp.pct_ast_2pm) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_ast_2pm,
	avg(t_opp.pct_uast_2pm) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_uast_2pm,
	avg(t_opp.pct_ast_3pm) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_ast_3pm,
	avg(t_opp.pct_uast_3pm) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_uast_3pm,
	avg(t_opp.pct_ast_fgm) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_ast_fgm,
	avg(t_opp.pct_uast_fgm) OVER (PARTITION BY ps.opponent_team_id, ps.season) AS pct_uast_fgm,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.dist) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS dist,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.orbc) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS orbc,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.drbc) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS drbc,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.rbc) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS rbc,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.tchs) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS tchs,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.sast) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS sast,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.ftast) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS ftast,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.pass) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS pass,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.cfgm) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS cfgm,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.cfga) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS cfga,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.cfg_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS cfg_pct,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.ufgm) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS ufgm,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.ufga) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS ufga,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.ufg_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS ufg_pct,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.dfgm) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS dfgm,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.dfga) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS dfga,
	case when ps.season <= 201314 then NULL::double precision else avg(t_opp.dfg_pct) OVER (PARTITION BY ps.opponent_team_id, ps.season) end AS dfg_pct
   FROM rpt.mvw_player_schedule ps
	 LEFT JOIN rpt.fct_game_player gp ON ps.game_id::text = gp.game_id::text AND ps.player_id = gp.player_id
	 LEFT JOIN rpt.fct_game_team t_opp ON ps.game_id::text = t_opp.game_id::text AND ps.opponent_team_id = t_opp.team_id
) a
where a.game_date between current_date and current_date + 1
;

